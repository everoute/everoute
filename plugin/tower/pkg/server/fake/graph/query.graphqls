# mock tower query vms and labels
type Query {
    vms: [VM!]!
    labels: [Label!]!
    securityPolicies: [SecurityPolicy!]!
    isolationPolicies: [IsolationPolicy!]!
}

# mock tower subscribe vm and label
type Subscription {
    vm: VMEvent!
    label: LabelEvent!
    securityPolicy: SecurityPolicyEvent!
    isolationPolicy: IsolationPolicyEvent!
}

# mock tower user login
type Mutation {
    login(data: LoginInput!): Login!
}

type Login {
    token: String!
}

input LoginInput {
    password: String!
    source: UserSource!
    username: String!
}

enum UserSource {
    LDAP
    LOCAL
}

type VMEvent {
    mutation: MutationType!
    node: VM!
    previousValues: ObjectReference
}

type LabelEvent {
    mutation: MutationType!
    node: Label!
    previousValues: ObjectReference
}

type SecurityPolicyEvent {
    mutation: MutationType!
    node: SecurityPolicy!
    previousValues: ObjectReference
}

type IsolationPolicyEvent {
    mutation: MutationType!
    node: IsolationPolicy!
    previousValues: ObjectReference
}

type ObjectReference {
    id: ID!
}

enum MutationType {
    CREATED
    DELETED
    UPDATED
}
