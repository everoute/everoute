type SecurityPolicy {
    id: ID!
    name: String!
    everoute_cluster: ObjectReference!
    apply_to: [SecurityPolicyApply!]!
    ingress: [NetworkPolicyRule!]
    egress: [NetworkPolicyRule!]
    policy_mode: PolicyMode
}

type SecurityPolicyApply {
    communicable: Boolean!
    selector: [ObjectReference!]!
}

enum PolicyMode {
    MONITOR
    WORK
}

type IsolationPolicy {
    id: ID!
    everoute_cluster: ObjectReference!
    vm: ObjectReference!
    mode: IsolationMode!
    ingress: [NetworkPolicyRule!]
    egress: [NetworkPolicyRule!]
}

enum IsolationMode {
    ALL
    PARTIAL
}

type NetworkPolicyRule {
    ip_block: String
    ports: [NetworkPolicyRulePort!]
    selector: [ObjectReference!]
    type: NetworkPolicyRuleType!
}

type NetworkPolicyRulePort {
    port: String
    protocol: NetworkPolicyRulePortProtocol!
}

enum NetworkPolicyRulePortProtocol {
    ICMP
    TCP
    UDP
}

enum NetworkPolicyRuleType {
    ALL
    IP_BLOCK
    SELECTOR
}

type SystemEndpoints {
    id_endpoints: [IDSystemEndpoint!]
    ip_port_endpoints: [IPPortSystemEndpoint!]
}

type IDSystemEndpoint {
    key: String!
    vm_id: String!
}

type IPPortSystemEndpoint {
    key: String!
    ip: String!
    port: Int
}
