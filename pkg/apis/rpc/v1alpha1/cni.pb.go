// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: pkg/apis/rpc/v1alpha1/cni.proto

package v1alpha1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_UNKNOWN                       ErrorCode = 0
	ErrorCode_INCOMPATIBLE_CNI_VERSION      ErrorCode = 1
	ErrorCode_UNSUPPORTED_FIELD             ErrorCode = 2
	ErrorCode_UNKNOWN_CONTAINER             ErrorCode = 3
	ErrorCode_INVALID_ENVIRONMENT_VARIABLES ErrorCode = 4
	ErrorCode_IO_FAILURE                    ErrorCode = 5
	ErrorCode_DECODING_FAILURE              ErrorCode = 6
	ErrorCode_INVALID_NETWORK_CONFIG        ErrorCode = 7
	ErrorCode_TRY_AGAIN_LATER               ErrorCode = 11
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "INCOMPATIBLE_CNI_VERSION",
		2:  "UNSUPPORTED_FIELD",
		3:  "UNKNOWN_CONTAINER",
		4:  "INVALID_ENVIRONMENT_VARIABLES",
		5:  "IO_FAILURE",
		6:  "DECODING_FAILURE",
		7:  "INVALID_NETWORK_CONFIG",
		11: "TRY_AGAIN_LATER",
	}
	ErrorCode_value = map[string]int32{
		"UNKNOWN":                       0,
		"INCOMPATIBLE_CNI_VERSION":      1,
		"UNSUPPORTED_FIELD":             2,
		"UNKNOWN_CONTAINER":             3,
		"INVALID_ENVIRONMENT_VARIABLES": 4,
		"IO_FAILURE":                    5,
		"DECODING_FAILURE":              6,
		"INVALID_NETWORK_CONFIG":        7,
		"TRY_AGAIN_LATER":               11,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_rpc_v1alpha1_cni_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_pkg_apis_rpc_v1alpha1_cni_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescGZIP(), []int{0}
}

type CniRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Netns       string `protobuf:"bytes,2,opt,name=netns,proto3" json:"netns,omitempty"`
	Ifname      string `protobuf:"bytes,3,opt,name=ifname,proto3" json:"ifname,omitempty"`
	Args        string `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	Path        string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Stdin       []byte `protobuf:"bytes,6,opt,name=stdin,proto3" json:"stdin,omitempty"`
}

func (x *CniRequest) Reset() {
	*x = CniRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CniRequest) ProtoMessage() {}

func (x *CniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CniRequest.ProtoReflect.Descriptor instead.
func (*CniRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescGZIP(), []int{0}
}

func (x *CniRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *CniRequest) GetNetns() string {
	if x != nil {
		return x.Netns
	}
	return ""
}

func (x *CniRequest) GetIfname() string {
	if x != nil {
		return x.Ifname
	}
	return ""
}

func (x *CniRequest) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *CniRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CniRequest) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=everoute_io.pkg.apis.rpc.v1alpha1.ErrorCode" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details string    `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_UNKNOWN
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type CniResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CniResponse) Reset() {
	*x = CniResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CniResponse) ProtoMessage() {}

func (x *CniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CniResponse.ProtoReflect.Descriptor instead.
func (*CniResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescGZIP(), []int{2}
}

func (x *CniResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CniResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_pkg_apis_rpc_v1alpha1_cni_proto protoreflect.FileDescriptor

var file_pkg_apis_rpc_v1alpha1_cni_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x65, 0x76, 0x65, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x43, 0x6e, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x66, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x66,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x64,
	0x69, 0x6e, 0x22, 0x7d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x65, 0x0a, 0x0b, 0x43, 0x6e, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0xde, 0x01, 0x0a, 0x09, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x49,
	0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4e, 0x49, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x12,
	0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52,
	0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x53,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4f, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x45, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x47, 0x41, 0x49,
	0x4e, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x10, 0x0b, 0x32, 0xc8, 0x02, 0x0a, 0x03, 0x43, 0x6e,
	0x69, 0x12, 0x69, 0x0a, 0x06, 0x43, 0x6d, 0x64, 0x41, 0x64, 0x64, 0x12, 0x2d, 0x2e, 0x65, 0x76,
	0x65, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x6e, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6e, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x08,
	0x43, 0x6d, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6e, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6e, 0x69, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x06, 0x43, 0x6d, 0x64,
	0x44, 0x65, 0x6c, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69,
	0x6f, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6e, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6f,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6e, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescOnce sync.Once
	file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescData = file_pkg_apis_rpc_v1alpha1_cni_proto_rawDesc
)

func file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescGZIP() []byte {
	file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescOnce.Do(func() {
		file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescData)
	})
	return file_pkg_apis_rpc_v1alpha1_cni_proto_rawDescData
}

var file_pkg_apis_rpc_v1alpha1_cni_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_apis_rpc_v1alpha1_cni_proto_goTypes = []interface{}{
	(ErrorCode)(0),      // 0: everoute_io.pkg.apis.rpc.v1alpha1.ErrorCode
	(*CniRequest)(nil),  // 1: everoute_io.pkg.apis.rpc.v1alpha1.CniRequest
	(*Error)(nil),       // 2: everoute_io.pkg.apis.rpc.v1alpha1.Error
	(*CniResponse)(nil), // 3: everoute_io.pkg.apis.rpc.v1alpha1.CniResponse
}
var file_pkg_apis_rpc_v1alpha1_cni_proto_depIdxs = []int32{
	0, // 0: everoute_io.pkg.apis.rpc.v1alpha1.Error.code:type_name -> everoute_io.pkg.apis.rpc.v1alpha1.ErrorCode
	2, // 1: everoute_io.pkg.apis.rpc.v1alpha1.CniResponse.error:type_name -> everoute_io.pkg.apis.rpc.v1alpha1.Error
	1, // 2: everoute_io.pkg.apis.rpc.v1alpha1.Cni.CmdAdd:input_type -> everoute_io.pkg.apis.rpc.v1alpha1.CniRequest
	1, // 3: everoute_io.pkg.apis.rpc.v1alpha1.Cni.CmdCheck:input_type -> everoute_io.pkg.apis.rpc.v1alpha1.CniRequest
	1, // 4: everoute_io.pkg.apis.rpc.v1alpha1.Cni.CmdDel:input_type -> everoute_io.pkg.apis.rpc.v1alpha1.CniRequest
	3, // 5: everoute_io.pkg.apis.rpc.v1alpha1.Cni.CmdAdd:output_type -> everoute_io.pkg.apis.rpc.v1alpha1.CniResponse
	3, // 6: everoute_io.pkg.apis.rpc.v1alpha1.Cni.CmdCheck:output_type -> everoute_io.pkg.apis.rpc.v1alpha1.CniResponse
	3, // 7: everoute_io.pkg.apis.rpc.v1alpha1.Cni.CmdDel:output_type -> everoute_io.pkg.apis.rpc.v1alpha1.CniResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_apis_rpc_v1alpha1_cni_proto_init() }
func file_pkg_apis_rpc_v1alpha1_cni_proto_init() {
	if File_pkg_apis_rpc_v1alpha1_cni_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CniRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CniResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_apis_rpc_v1alpha1_cni_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_apis_rpc_v1alpha1_cni_proto_goTypes,
		DependencyIndexes: file_pkg_apis_rpc_v1alpha1_cni_proto_depIdxs,
		EnumInfos:         file_pkg_apis_rpc_v1alpha1_cni_proto_enumTypes,
		MessageInfos:      file_pkg_apis_rpc_v1alpha1_cni_proto_msgTypes,
	}.Build()
	File_pkg_apis_rpc_v1alpha1_cni_proto = out.File
	file_pkg_apis_rpc_v1alpha1_cni_proto_rawDesc = nil
	file_pkg_apis_rpc_v1alpha1_cni_proto_goTypes = nil
	file_pkg_apis_rpc_v1alpha1_cni_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CniClient is the client API for Cni service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CniClient interface {
	CmdAdd(ctx context.Context, in *CniRequest, opts ...grpc.CallOption) (*CniResponse, error)
	CmdCheck(ctx context.Context, in *CniRequest, opts ...grpc.CallOption) (*CniResponse, error)
	CmdDel(ctx context.Context, in *CniRequest, opts ...grpc.CallOption) (*CniResponse, error)
}

type cniClient struct {
	cc grpc.ClientConnInterface
}

func NewCniClient(cc grpc.ClientConnInterface) CniClient {
	return &cniClient{cc}
}

func (c *cniClient) CmdAdd(ctx context.Context, in *CniRequest, opts ...grpc.CallOption) (*CniResponse, error) {
	out := new(CniResponse)
	err := c.cc.Invoke(ctx, "/everoute_io.pkg.apis.rpc.v1alpha1.Cni/CmdAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cniClient) CmdCheck(ctx context.Context, in *CniRequest, opts ...grpc.CallOption) (*CniResponse, error) {
	out := new(CniResponse)
	err := c.cc.Invoke(ctx, "/everoute_io.pkg.apis.rpc.v1alpha1.Cni/CmdCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cniClient) CmdDel(ctx context.Context, in *CniRequest, opts ...grpc.CallOption) (*CniResponse, error) {
	out := new(CniResponse)
	err := c.cc.Invoke(ctx, "/everoute_io.pkg.apis.rpc.v1alpha1.Cni/CmdDel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CniServer is the server API for Cni service.
type CniServer interface {
	CmdAdd(context.Context, *CniRequest) (*CniResponse, error)
	CmdCheck(context.Context, *CniRequest) (*CniResponse, error)
	CmdDel(context.Context, *CniRequest) (*CniResponse, error)
}

// UnimplementedCniServer can be embedded to have forward compatible implementations.
type UnimplementedCniServer struct {
}

func (*UnimplementedCniServer) CmdAdd(context.Context, *CniRequest) (*CniResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CmdAdd not implemented")
}
func (*UnimplementedCniServer) CmdCheck(context.Context, *CniRequest) (*CniResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CmdCheck not implemented")
}
func (*UnimplementedCniServer) CmdDel(context.Context, *CniRequest) (*CniResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CmdDel not implemented")
}

func RegisterCniServer(s *grpc.Server, srv CniServer) {
	s.RegisterService(&_Cni_serviceDesc, srv)
}

func _Cni_CmdAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CniRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CniServer).CmdAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/everoute_io.pkg.apis.rpc.v1alpha1.Cni/CmdAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CniServer).CmdAdd(ctx, req.(*CniRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cni_CmdCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CniRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CniServer).CmdCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/everoute_io.pkg.apis.rpc.v1alpha1.Cni/CmdCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CniServer).CmdCheck(ctx, req.(*CniRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cni_CmdDel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CniRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CniServer).CmdDel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/everoute_io.pkg.apis.rpc.v1alpha1.Cni/CmdDel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CniServer).CmdDel(ctx, req.(*CniRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cni_serviceDesc = grpc.ServiceDesc{
	ServiceName: "everoute_io.pkg.apis.rpc.v1alpha1.Cni",
	HandlerType: (*CniServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CmdAdd",
			Handler:    _Cni_CmdAdd_Handler,
		},
		{
			MethodName: "CmdCheck",
			Handler:    _Cni_CmdCheck_Handler,
		},
		{
			MethodName: "CmdDel",
			Handler:    _Cni_CmdDel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/apis/rpc/v1alpha1/cni.proto",
}
