
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: groupmemberspatches.group.lynx.smartx.com
spec:
  group: group.lynx.smartx.com
  names:
    kind: GroupMembersPatch
    listKind: GroupMembersPatchList
    plural: groupmemberspatches
    singular: groupmemberspatch
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          addedGroupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
              required:
              - endpointReference
              type: object
            type: array
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          appliedToGroupMembers:
            description: AppliedToGroupMembers means specific revision of GroupMembers
              Patch applied to.
            properties:
              name:
                type: string
              revision:
                format: int32
                type: integer
            required:
            - name
            - revision
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          removedGroupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
              required:
              - endpointReference
              type: object
            type: array
          updatedGroupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
              required:
              - endpointReference
              type: object
            type: array
        required:
        - appliedToGroupMembers
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: policyrules.policyrule.lynx.smartx.com
spec:
  group: policyrule.lynx.smartx.com
  names:
    kind: PolicyRule
    listKind: PolicyRuleList
    plural: policyrules
    singular: policyrule
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PolicyRule
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicyRuleSpec defines the desired state of PolicyRule
            properties:
              action:
                type: string
              direction:
                type: string
              dstIPAddr:
                type: string
              dstPort:
                type: integer
              dstPortMask:
                type: integer
              ipProtocol:
                type: string
              ruleType:
                type: string
              srcIPAddr:
                type: string
              srcPort:
                type: integer
              srcPortMask:
                type: integer
              tcpFlags:
                type: string
              tier:
                type: string
            required:
            - action
            - direction
            - ipProtocol
            - ruleType
            - tcpFlags
            type: object
          status:
            description: PolicyRuleStatus defines the observed state of PolicyRule
            properties:
              enforceState:
                type: string
              matchStatistics:
                format: int64
                type: integer
            required:
            - enforceState
            - matchStatistics
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: agentinfos.agent.lynx.smartx.com
spec:
  group: agent.lynx.smartx.com
  names:
    kind: AgentInfo
    listKind: AgentInfoList
    plural: agentinfos
    singular: agentinfo
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          conditions:
            items:
              properties:
                lastHeartbeatTime:
                  format: date-time
                  type: string
                message:
                  type: string
                reason:
                  type: string
                status:
                  type: string
                type:
                  type: string
              required:
              - lastHeartbeatTime
              - status
              - type
              type: object
            type: array
          hostname:
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          ovsInfo:
            properties:
              bridges:
                items:
                  properties:
                    name:
                      type: string
                    ports:
                      items:
                        properties:
                          bondConfig:
                            properties:
                              bondMode:
                                type: string
                            type: object
                          externalIDs:
                            additionalProperties:
                              type: string
                            type: object
                          interfaces:
                            items:
                              properties:
                                externalIDs:
                                  additionalProperties:
                                    type: string
                                  type: object
                                ips:
                                  items:
                                    description: IPAddress is net ip address, can
                                      be ipv4 or ipv6. Format like 192.168.10.12 or
                                      fe80::488e:b1ff:fe37:5414
                                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                                    type: string
                                  type: array
                                mac:
                                  type: string
                                name:
                                  type: string
                                ofport:
                                  format: int32
                                  type: integer
                                type:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          vlanConfig:
                            properties:
                              tag:
                                format: int32
                                type: integer
                              trunks:
                                format: int32
                                type: integer
                              vlanMode:
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: endpointgroups.group.lynx.smartx.com
spec:
  group: group.lynx.smartx.com
  names:
    kind: EndpointGroup
    listKind: EndpointGroupList
    plural: endpointgroups
    singular: endpointgroup
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EndpointGroupSpec defines the desired state for EndpointGroup.
            properties:
              endpointSelector:
                description: "EndpointSelector selects endpoints. This field follows
                  standard label selector semantics; if present but empty, it selects
                  all endpoints. \n If NamespaceSelector is set, then the EndpointGroup
                  would select the endpoints matching EndpointSelector in the Namespaces
                  selected by NamespaceSelector. If Namespace is set, then the EndpointGroup
                  would select the endpoints matching EndpointSelector in the specific
                  Namespace. If neither of NamespaceSelector or Namespace set, then
                  the EndpointGroup would select the endpoints in all namespaces."
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              namespace:
                description: "This is a namespace for select endpoints in. \n If Namespace
                  is set, then the EndpointGroup would select the endpoints matching
                  EndpointSelector in the specific Namespace. If this field is set
                  then the NamespaceSelector field cannot be set."
                type: string
              namespaceSelector:
                description: "NamespaceSelector selects namespaces. This field follows
                  standard label selector semantics; if present but empty, it selects
                  all namespaces. \n If NamespaceSelector is set, then the EndpointGroup
                  would select the endpoints matching EndpointSelector in the Namespaces
                  selected by NamespaceSelector. If this field is set then the Namespace
                  field cannot be set."
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: tiers.security.lynx.smartx.com
spec:
  group: security.lynx.smartx.com
  names:
    kind: Tier
    listKind: TierList
    plural: tiers
    singular: tier
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: Description is an optional field to add more information
                  regarding the purpose of this Tier.
                type: string
              priority:
                format: int32
                type: integer
              tierMode:
                enum:
                - Whitelist
                - Blacklist
                type: string
            required:
            - priority
            - tierMode
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: endpoints.security.lynx.smartx.com
spec:
  group: security.lynx.smartx.com
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              reference:
                properties:
                  externalIDName:
                    type: string
                  externalIDValue:
                    type: string
                required:
                - externalIDName
                - externalIDValue
                type: object
              vid:
                format: int32
                type: integer
            required:
            - reference
            - vid
            type: object
          status:
            properties:
              ips:
                items:
                  description: IPAddress is net ip address, can be ipv4 or ipv6. Format
                    like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                  pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                  type: string
                type: array
              macAddress:
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: securitypolicies.security.lynx.smartx.com
spec:
  group: security.lynx.smartx.com
  names:
    kind: SecurityPolicy
    listKind: SecurityPolicyList
    plural: securitypolicies
    singular: securitypolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              appliedTo:
                description: Object to be applied to list of ingress rule and egress
                  rule
                properties:
                  endpointGroups:
                    description: List of groups which SecurityPolicy applied to. Each
                      item in this list is combined using a logical OR. This field
                      must not empty.
                    items:
                      type: string
                    type: array
                  endpoints:
                    description: Endpoint which SecurityPolicy applied to
                    items:
                      type: string
                    type: array
                type: object
              egressRules:
                description: List of egress rules to be applied to giving groups.
                  If this field is empty then this SecurityPolicy limits all outgoing
                  traffic.
                items:
                  properties:
                    from:
                      description: Giving sources which can access applied groups
                        for this rule. If this field is empty or missing, this rule
                        matches all sources. This field only works when rule is ingress.
                      properties:
                        endpointGroups:
                          items:
                            type: string
                          type: array
                        endpoints:
                          items:
                            type: string
                          type: array
                        ipBlocks:
                          items:
                            description: IPBlock describes a particular CIDR (Ex.
                              "192.168.1.1/24","2001:db9::/64") that is allowed to
                              the pods matched by a NetworkPolicySpec's podSelector.
                              The except entry describes CIDRs that should not be
                              included within this rule.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                      type: object
                    name:
                      description: Name must be unique within the policy and conforms
                        RFC 1123.
                      type: string
                    ports:
                      description: List of destination ports for outgoing traffic.
                        If this field is empty or missing, this rule matches all ports
                        and protocols. Each item in this list is combined using a
                        logical OR.
                      items:
                        description: SecurityPolicyPort describes the port and protocol
                          to match in a rule.
                        properties:
                          portRange:
                            description: PortRange is a range of port. If you want
                              match all ports, you should set empty. If you want match
                              single port, you should write like 22. If you want match
                              a range of port, you should write like 20-80, ports
                              between 20 and 80 (include 20 and 80) will matches.
                              If you want match multiple ports, you should write like
                              20,22-24,90.
                            pattern: ^(((\d{1,5}-\d{1,5})|(\d{1,5})),)*((\d{1,5}-\d{1,5})|(\d{1,5}))$|^$
                            type: string
                          protocol:
                            description: The protocol (TCP, UDP or ICMP) which traffic
                              must match.
                            enum:
                            - TCP
                            - UDP
                            - ICMP
                            type: string
                        required:
                        - protocol
                        type: object
                      type: array
                    to:
                      description: Giving destinations which can outgoing traffic
                        of applied groups for this rule. If this field is empty or
                        missing, this rule matches all destinations. This field only
                        works when rule is egress.
                      properties:
                        endpointGroups:
                          items:
                            type: string
                          type: array
                        endpoints:
                          items:
                            type: string
                          type: array
                        ipBlocks:
                          items:
                            description: IPBlock describes a particular CIDR (Ex.
                              "192.168.1.1/24","2001:db9::/64") that is allowed to
                              the pods matched by a NetworkPolicySpec's podSelector.
                              The except entry describes CIDRs that should not be
                              included within this rule.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                      type: object
                  required:
                  - name
                  type: object
                type: array
              ingressRules:
                description: List of ingress rules to be applied to giving groups.
                  If this field is empty then this SecurityPolicy does not allow any
                  traffic.
                items:
                  properties:
                    from:
                      description: Giving sources which can access applied groups
                        for this rule. If this field is empty or missing, this rule
                        matches all sources. This field only works when rule is ingress.
                      properties:
                        endpointGroups:
                          items:
                            type: string
                          type: array
                        endpoints:
                          items:
                            type: string
                          type: array
                        ipBlocks:
                          items:
                            description: IPBlock describes a particular CIDR (Ex.
                              "192.168.1.1/24","2001:db9::/64") that is allowed to
                              the pods matched by a NetworkPolicySpec's podSelector.
                              The except entry describes CIDRs that should not be
                              included within this rule.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                      type: object
                    name:
                      description: Name must be unique within the policy and conforms
                        RFC 1123.
                      type: string
                    ports:
                      description: List of destination ports for outgoing traffic.
                        If this field is empty or missing, this rule matches all ports
                        and protocols. Each item in this list is combined using a
                        logical OR.
                      items:
                        description: SecurityPolicyPort describes the port and protocol
                          to match in a rule.
                        properties:
                          portRange:
                            description: PortRange is a range of port. If you want
                              match all ports, you should set empty. If you want match
                              single port, you should write like 22. If you want match
                              a range of port, you should write like 20-80, ports
                              between 20 and 80 (include 20 and 80) will matches.
                              If you want match multiple ports, you should write like
                              20,22-24,90.
                            pattern: ^(((\d{1,5}-\d{1,5})|(\d{1,5})),)*((\d{1,5}-\d{1,5})|(\d{1,5}))$|^$
                            type: string
                          protocol:
                            description: The protocol (TCP, UDP or ICMP) which traffic
                              must match.
                            enum:
                            - TCP
                            - UDP
                            - ICMP
                            type: string
                        required:
                        - protocol
                        type: object
                      type: array
                    to:
                      description: Giving destinations which can outgoing traffic
                        of applied groups for this rule. If this field is empty or
                        missing, this rule matches all destinations. This field only
                        works when rule is egress.
                      properties:
                        endpointGroups:
                          items:
                            type: string
                          type: array
                        endpoints:
                          items:
                            type: string
                          type: array
                        ipBlocks:
                          items:
                            description: IPBlock describes a particular CIDR (Ex.
                              "192.168.1.1/24","2001:db9::/64") that is allowed to
                              the pods matched by a NetworkPolicySpec's podSelector.
                              The except entry describes CIDRs that should not be
                              included within this rule.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                      type: object
                  required:
                  - name
                  type: object
                type: array
              policyTypes:
                description: List of rule types that the Security relates to. Valid
                  options are "Ingress", "Egress", or "Ingress,Egress". If this field
                  is not specified, it will default based on the existence of Ingress
                  or Egress rules; policies that contain an Egress section are assumed
                  to affect Egress, and all policies (whether or not they contain
                  an Ingress section) are assumed to affect Ingress. If you want to
                  write an egress-only policy, you must explicitly specify policyTypes
                  [ "Egress" ]. Likewise, if you want to write a policy that specifies
                  that no egress is allowed, you must specify a policyTypes value
                  that include "Egress" (since such a policy would not include an
                  Egress section and would otherwise default to just [ "Ingress" ]).
                items:
                  description: Policy Type string describes the NetworkPolicy type
                    This type is beta-level in 1.8
                  type: string
                type: array
              symmetricMode:
                description: SymmetricMode will generated symmetry rules for the policy.
                  Defaults to false.
                type: boolean
              tier:
                type: string
            required:
            - appliedTo
            - tier
            type: object
          status:
            properties:
              currentAgentsRealized:
                description: The number of agents that have realized the SecurityPolicy.
                format: int32
                type: integer
              desiredAgentsRealized:
                description: The total number of agents that should realize the SecurityPolicy.
                format: int32
                type: integer
              observedGeneration:
                description: The generation observed by Lynx.
                format: int64
                type: integer
              phase:
                description: The phase of a SecurityPolicy is a simple, high-level
                  summary of the SecurityPolicy's status.
                type: string
            required:
            - currentAgentsRealized
            - desiredAgentsRealized
            - observedGeneration
            - phase
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: globalpolicies.security.lynx.smartx.com
spec:
  group: security.lynx.smartx.com
  names:
    kind: GlobalPolicy
    listKind: GlobalPolicyList
    plural: globalpolicies
    singular: globalpolicy
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GlobalPolicy allow defines default action of traffics and global
          ip whitelist. Only one GlobalPolicy can exist on kubernetes.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              defaultAction:
                default: Allow
                description: DefaultAction defines global traffic action
                enum:
                - Allow
                - Drop
                type: string
              whitelist:
                description: Whitelist defines IPBlocks than always allow traffics.
                items:
                  description: IPBlock describes a particular CIDR (Ex. "192.168.1.1/24","2001:db9::/64")
                    that is allowed to the pods matched by a NetworkPolicySpec's podSelector.
                    The except entry describes CIDRs that should not be included within
                    this rule.
                  properties:
                    cidr:
                      description: CIDR is a string representing the IP Block Valid
                        examples are "192.168.1.1/24" or "2001:db9::/64"
                      type: string
                    except:
                      description: Except is a slice of CIDRs that should not be included
                        within an IP Block Valid examples are "192.168.1.1/24" or
                        "2001:db9::/64" Except values will be rejected if they are
                        outside the CIDR range
                      items:
                        type: string
                      type: array
                  required:
                  - cidr
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: groupmembers.group.lynx.smartx.com
spec:
  group: group.lynx.smartx.com
  names:
    kind: GroupMembers
    listKind: GroupMembersList
    plural: groupmembers
    singular: groupmembers
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          groupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
              required:
              - endpointReference
              type: object
            type: array
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          revision:
            description: Revision should change when group members change.
            format: int32
            type: integer
        required:
        - revision
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: lynx-agent
rules:
- apiGroups:
  - agent.lynx.smartx.com
  resources:
  - agentinfos
  verbs:
  - patch
  - create
  - update
  - delete
  - get
  - list
  - watch
- apiGroups:
  - policyrule.lynx.smartx.com
  resources:
  - policyrules
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lynx-agent
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lynx-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lynx-agent
subjects:
  - kind: ServiceAccount
    name: lynx-agent
    namespace: kube-system
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    # support use certs authentication
    name: lynx-agent
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validator.lynx.smartx.com
webhooks:
  - clientConfig:
      # CaBundle must set as the ca for secret lynx-controller-tls.
      caBundle:
      service:
        name: lynx-validator-webhook
        namespace: kube-system
        path: /validate/crds
        port: 9443
    failurePolicy: Fail
    name: validator.lynx.smartx.com
    rules:
      - apiGroups:
          - security.lynx.smartx.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - securitypolicies
          - tiers
          - endpoints
          - globalpolicies
      - apiGroups:
          - group.lynx.smartx.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - endpointgroups

---
apiVersion: v1
kind: Service
metadata:
  name: lynx-validator-webhook
  namespace: kube-system
spec:
  type: ClusterIP
  ports:
    - port: 9443
      protocol: TCP
      # This port should match port lynx-controller exposed.
      targetPort: 9443
  selector:
    app: lynx
    component: lynx-controller

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: lynx-controller
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - secrets
  - validatingwebhookconfiguration
  verbs:
  - patch
  - create
  - update
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - agent.lynx.smartx.com
  resources:
  - agentinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - group.lynx.smartx.com
  resources:
  - groupmembers
  - groupmemberspatches
  - endpointgroups
  verbs:
  - patch
  - create
  - update
  - delete
  - deletecollection
  - get
  - list
  - watch
- apiGroups:
  - security.lynx.smartx.com
  resources:
  - tiers
  - securitypolicies
  - securitypolicies/status
  - endpoints
  - endpoints/status
  - globalpolicies
  verbs:
  - patch
  - update
  - get
  - list
  - watch
- apiGroups:
  - policyrule.lynx.smartx.com
  resources:
  - policyrules
  - policyrules/status
  verbs:
  - patch
  - create
  - update
  - delete
  - deletecollection
  - get
  - list
  - watch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lynx-controller
  namespace: kube-system
  labels:
    app: lynx
    component: lynx-controller
spec:
  strategy:
    # Ensure the existing Pod is killed before the new one is created.
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: lynx
      component: lynx-controller
  template:
    metadata:
      labels:
        app: lynx
        component: lynx-controller
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: lynx-controller
      hostNetwork: true
      containers:
        - name: lynx-controller
          image: lynx/release
          imagePullPolicy: IfNotPresent
          command: ["lynx-controller"]
          args:
            - --enable-leader-election=true
            - --port=9443
            - -v=0
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lynx-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lynx-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lynx-controller
subjects:
  - kind: ServiceAccount
    name: lynx-controller
    namespace: kube-system
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    # support use certs authentication
    name: lynx-controller
