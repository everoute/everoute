---
# Source: crds/agent.everoute.io_agentinfos.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: agentinfos.agent.everoute.io
spec:
  group: agent.everoute.io
  names:
    kind: AgentInfo
    listKind: AgentInfoList
    plural: agentinfos
    singular: agentinfo
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          conditions:
            items:
              properties:
                lastHeartbeatTime:
                  format: date-time
                  type: string
                message:
                  type: string
                reason:
                  type: string
                status:
                  type: string
                type:
                  type: string
              required:
              - lastHeartbeatTime
              - status
              - type
              type: object
            type: array
          hostname:
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          ovsInfo:
            properties:
              bridges:
                items:
                  properties:
                    name:
                      type: string
                    ports:
                      items:
                        properties:
                          bondConfig:
                            properties:
                              bondMode:
                                type: string
                            type: object
                          externalIDs:
                            additionalProperties:
                              type: string
                            type: object
                          interfaces:
                            items:
                              properties:
                                externalIDs:
                                  additionalProperties:
                                    type: string
                                  type: object
                                ipmap:
                                  additionalProperties:
                                    format: date-time
                                    type: string
                                  type: object
                                mac:
                                  type: string
                                name:
                                  type: string
                                ofport:
                                  format: int32
                                  type: integer
                                type:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          vlanConfig:
                            properties:
                              tag:
                                format: int32
                                type: integer
                              trunks:
                                format: int32
                                type: integer
                              vlanMode:
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              version:
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/group.everoute.io_endpointgroups.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: endpointgroups.group.everoute.io
spec:
  group: group.everoute.io
  names:
    kind: EndpointGroup
    listKind: EndpointGroupList
    plural: endpointgroups
    singular: endpointgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.endpointSelector
      name: EndpointSelector
      type: string
    - jsonPath: .spec.namespaceSelector
      name: NamespaceSelector
      type: string
    - jsonPath: .spec.namespace
      name: Namespace
      type: string
    - jsonPath: .spec.endpoint
      name: Endpoint
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EndpointGroupSpec defines the desired state for EndpointGroup.
            properties:
              endpoint:
                description: NamespacedName contains information to specify an object.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a
                      resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the resource
                      name must be unique.
                    type: string
                required:
                - name
                - namespace
                type: object
              endpointSelector:
                description: "EndpointSelector selects endpoints. This field follows
                  extend label selector semantics; if present but empty, it selects
                  all endpoints. \n If NamespaceSelector is set, then the EndpointGroup
                  would select the endpoints matching EndpointSelector in the Namespaces
                  selected by NamespaceSelector. If Namespace is set, then the EndpointGroup
                  would select the endpoints matching EndpointSelector in the specific
                  Namespace. If neither of NamespaceSelector or Namespace set, then
                  the EndpointGroup would select the endpoints in all namespaces."
                properties:
                  extendMatchLabels:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: 'ExtendMatchLabels allows match labels with the same
                      key but different value. e.g. {key: [v1, v2]} matches labels:
                      {key: v1, key: v2} and {key: v1, key: v2, key: v3}'
                    type: object
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              namespace:
                description: "This is a namespace for select endpoints in. \n If Namespace
                  is set, then the EndpointGroup would select the endpoints matching
                  EndpointSelector in the specific Namespace. If this field is set
                  then the NamespaceSelector field cannot be set."
                type: string
              namespaceSelector:
                description: "NamespaceSelector selects namespaces. This field follows
                  standard label selector semantics; if present but empty, it selects
                  all namespaces. \n If NamespaceSelector is set, then the EndpointGroup
                  would select the endpoints matching EndpointSelector in the Namespaces
                  selected by NamespaceSelector. If this field is set then the Namespace
                  field cannot be set."
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/group.everoute.io_groupmembers.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: groupmembers.group.everoute.io
spec:
  group: group.everoute.io
  names:
    kind: GroupMembers
    listKind: GroupMembersList
    plural: groupmembers
    singular: groupmembers
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .revision
      name: Revision
      type: string
    - jsonPath: .groupMembers[*].ips
      name: Members
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          groupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointAgent:
                  description: EndpointAgent means where this groupMember may appear.
                    if this field is empty, this group member will apply to all agents.
                  items:
                    type: string
                  type: array
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
                ports:
                  items:
                    description: NamedPort represents a Port with a name on Pod.
                    properties:
                      name:
                        description: Name represents the associated name with this
                          Port number.
                        type: string
                      port:
                        description: Port represents the Port number.
                        format: int32
                        type: integer
                      protocol:
                        description: Protocol for port. Must be UDP, TCP  TODO not
                          icmp webhook
                        enum:
                        - TCP
                        - UDP
                        - ICMP
                        type: string
                    type: object
                  type: array
              required:
              - endpointReference
              type: object
            type: array
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          revision:
            description: Revision should change when group members change.
            format: int32
            type: integer
        required:
        - revision
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/group.everoute.io_groupmemberspatches.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: groupmemberspatches.group.everoute.io
spec:
  group: group.everoute.io
  names:
    kind: GroupMembersPatch
    listKind: GroupMembersPatchList
    plural: groupmemberspatches
    singular: groupmemberspatch
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          addedGroupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointAgent:
                  description: EndpointAgent means where this groupMember may appear.
                    if this field is empty, this group member will apply to all agents.
                  items:
                    type: string
                  type: array
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
                ports:
                  items:
                    description: NamedPort represents a Port with a name on Pod.
                    properties:
                      name:
                        description: Name represents the associated name with this
                          Port number.
                        type: string
                      port:
                        description: Port represents the Port number.
                        format: int32
                        type: integer
                      protocol:
                        description: Protocol for port. Must be UDP, TCP  TODO not
                          icmp webhook
                        enum:
                        - TCP
                        - UDP
                        - ICMP
                        type: string
                    type: object
                  type: array
              required:
              - endpointReference
              type: object
            type: array
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          appliedToGroupMembers:
            description: AppliedToGroupMembers means specific revision of GroupMembers
              Patch applied to.
            properties:
              name:
                type: string
              revision:
                format: int32
                type: integer
            required:
            - name
            - revision
            type: object
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          removedGroupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointAgent:
                  description: EndpointAgent means where this groupMember may appear.
                    if this field is empty, this group member will apply to all agents.
                  items:
                    type: string
                  type: array
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
                ports:
                  items:
                    description: NamedPort represents a Port with a name on Pod.
                    properties:
                      name:
                        description: Name represents the associated name with this
                          Port number.
                        type: string
                      port:
                        description: Port represents the Port number.
                        format: int32
                        type: integer
                      protocol:
                        description: Protocol for port. Must be UDP, TCP  TODO not
                          icmp webhook
                        enum:
                        - TCP
                        - UDP
                        - ICMP
                        type: string
                    type: object
                  type: array
              required:
              - endpointReference
              type: object
            type: array
          updatedGroupMembers:
            items:
              description: GroupMember represents resource member to be populated
                in Groups.
              properties:
                endpointAgent:
                  description: EndpointAgent means where this groupMember may appear.
                    if this field is empty, this group member will apply to all agents.
                  items:
                    type: string
                  type: array
                endpointReference:
                  description: EndpointReference maintains the reference to the Endpoint.
                  properties:
                    externalIDName:
                      type: string
                    externalIDValue:
                      type: string
                  required:
                  - externalIDName
                  - externalIDValue
                  type: object
                ips:
                  items:
                    description: IPAddress is net ip address, can be ipv4 or ipv6.
                      Format like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                    pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                    type: string
                  type: array
                ports:
                  items:
                    description: NamedPort represents a Port with a name on Pod.
                    properties:
                      name:
                        description: Name represents the associated name with this
                          Port number.
                        type: string
                      port:
                        description: Port represents the Port number.
                        format: int32
                        type: integer
                      protocol:
                        description: Protocol for port. Must be UDP, TCP  TODO not
                          icmp webhook
                        enum:
                        - TCP
                        - UDP
                        - ICMP
                        type: string
                    type: object
                  type: array
              required:
              - endpointReference
              type: object
            type: array
        required:
        - appliedToGroupMembers
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/security.everoute.io_endpoints.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: endpoints.security.everoute.io
spec:
  group: security.everoute.io
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.reference.externalIDName
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .spec.reference.externalIDValue
      name: EXTERNAL-VALUE
      type: string
    - jsonPath: .status.ips
      name: IPADDR
      type: string
    - jsonPath: .spec.extendLabels
      name: EXTEND-LABELS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Endpoint is a network communication entity. It's provided by
          the endpoint provider, it could be a virtual network interface, a pod, an
          ovs port or other entities.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains description of the endpoint
            properties:
              extendLabels:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: ExtendLabels contains extend labels of endpoint. Each
                  key in the labels could have multiple values, but at least one should
                  be specified. The ExtendLabels could be selected by selector in
                  SecurityPolicy or EndpointGroup.
                type: object
              ports:
                items:
                  description: NamedPort represents a Port with a name on Pod.
                  properties:
                    name:
                      description: Name represents the associated name with this Port
                        number.
                      type: string
                    port:
                      description: Port represents the Port number.
                      format: int32
                      type: integer
                    protocol:
                      description: Protocol for port. Must be UDP, TCP  TODO not icmp
                        webhook
                      enum:
                      - TCP
                      - UDP
                      - ICMP
                      type: string
                  type: object
                type: array
              reference:
                description: Reference of an endpoint, also the external_id of an
                  ovs interface. We map between endpoint and ovs interface use the
                  Reference.
                properties:
                  externalIDName:
                    description: ExternalIDName of an endpoint.
                    type: string
                  externalIDValue:
                    description: ExternalIDValue of an endpoint.
                    type: string
                required:
                - externalIDName
                - externalIDValue
                type: object
              type:
                default: dynamic
                description: Type of this Endpoint
                enum:
                - dynamic
                - static
                - static-ip
                type: string
              vid:
                description: VID describe the endpoint in which VLAN
                format: int32
                type: integer
            required:
            - reference
            - vid
            type: object
          status:
            description: Status is the current state of the Endpoint
            properties:
              agents:
                description: Agents where this endpoint is currently located
                items:
                  type: string
                type: array
              ips:
                description: IPs of an endpoint, can be IPV4 or IPV6.
                items:
                  description: IPAddress is net ip address, can be ipv4 or ipv6. Format
                    like 192.168.10.12 or fe80::488e:b1ff:fe37:5414
                  pattern: ^(((([1]?\d)?\d|2[0-4]\d|25[0-5])\.){3}(([1]?\d)?\d|2[0-4]\d|25[0-5]))|([\da-fA-F]{1,4}(\:[\da-fA-F]{1,4}){7})|(([\da-fA-F]{1,4}:){0,5}::([\da-fA-F]{1,4}:){0,5}[\da-fA-F]{1,4})$
                  type: string
                type: array
              macAddress:
                description: MacAddress of an endpoint.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/security.everoute.io_globalpolicies.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: globalpolicies.security.everoute.io
spec:
  group: security.everoute.io
  names:
    kind: GlobalPolicy
    listKind: GlobalPolicyList
    plural: globalpolicies
    singular: globalpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.defaultAction
      name: DefaultAction
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GlobalPolicy allow defines default action of traffics and global
          ip whitelist. Only one GlobalPolicy can exist on kubernetes.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior for this GlobalPolicy.
            properties:
              defaultAction:
                default: Allow
                description: DefaultAction defines global traffic action
                enum:
                - Allow
                - Drop
                type: string
              globalPolicyEnforcementMode:
                default: work
                description: GlobalPolicy enforcement mode
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/security.everoute.io_securitypolicies.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: securitypolicies.security.everoute.io
spec:
  group: security.everoute.io
  names:
    kind: SecurityPolicy
    listKind: SecurityPolicyList
    plural: securitypolicies
    singular: securitypolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.tier
      name: Tier
      type: string
    - jsonPath: .spec.symmetricMode
      name: SymmetricMode
      type: boolean
    - jsonPath: .spec.policyTypes
      name: PolicyTypes
      type: string
    - jsonPath: .spec.securityPolicyEnforcementMode
      name: Enforcement
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecurityPolicy describes what network traffic is allowed for
          a set of Endpoint. Follow NetworkPolicy https://github.com/kubernetes/api/blob/v0.22.1/networking/v1/types.go#L29.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior for this SecurityPolicy.
            properties:
              appliedTo:
                description: 'Selects the endpoints to which this SecurityPolicy object
                  applies. Empty or nil means select all endpoints. Notice: if AppliedTo
                  is empty, IngressRule''s Ports can''t be namedPorts.'
                items:
                  description: ApplyToPeer describes sets of endpoints which this
                    SecurityPolicy object applies At least one field (Endpoint or
                    EndpointSelector) should be set.
                  properties:
                    endpoint:
                      description: "Endpoint defines policy on a specific Endpoint.
                        \n If Endpoint is set, then the SecurityPolicy would apply
                        to the endpoint in the SecurityPolicy Namespace. If Endpoint
                        doesnot exist OR has empty IPAddr, the ApplyToPeer would be
                        ignored. If this field is set then neither of the other fields
                        can be."
                      type: string
                    endpointSelector:
                      description: "EndpointSelector selects endpoints. This field
                        follows extend label selector semantics; if present but empty,
                        it selects all endpoints. \n If EndpointSelector is set, then
                        the SecurityPolicy would apply to the endpoints matching EndpointSelector
                        in the SecurityPolicy Namespace. If this field is set then
                        neither of the other fields can be."
                      properties:
                        extendMatchLabels:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: 'ExtendMatchLabels allows match labels with
                            the same key but different value. e.g. {key: [v1, v2]}
                            matches labels: {key: v1, key: v2} and {key: v1, key:
                            v2, key: v3}'
                          type: object
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                type: array
              defaultRule:
                default: drop
                description: DefaultRule will generate default rule for policy
                enum:
                - drop
                - allow
                - none
                type: string
              egressRules:
                description: List of egress rules to be applied to the selected endpoints.
                  If this field is empty then this SecurityPolicy limits all outgoing
                  traffic.
                items:
                  description: Rule describes a particular set of traffic that is
                    allowed from/to the endpoints matched by a SecurityPolicySpec's
                    AppliedTo.
                  properties:
                    from:
                      description: List of sources which should be able to access
                        the endpoints selected for this rule. Items in this list are
                        combined using a logical OR operation. If this field is empty
                        or missing, this rule matches all sources (traffic not restricted
                        by source). If this field is present and contains at least
                        one item, this rule allows traffic only if the traffic matches
                        at least one item in the from list. This field only works
                        when rule is ingress.
                      items:
                        description: SecurityPolicyPeer describes a peer to allow
                          traffic to/from. Only certain combinations of fields are
                          allowed
                        properties:
                          endpoint:
                            description: Endpoint defines policy on a specific Endpoint.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              name:
                                description: Name is unique within a namespace to
                                  reference a resource.
                                type: string
                              namespace:
                                description: Namespace defines the space within which
                                  the resource name must be unique.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          endpointSelector:
                            description: "EndpointSelector selects endpoints. This
                              field follows extend label selector semantics; if present
                              but empty, it selects all endpoints. \n If NamespaceSelector
                              is also set, then the Rule would select the endpoints
                              matching EndpointSelector in the Namespaces selected
                              by NamespaceSelector. Otherwise, it selects the Endpoints
                              matching EndpointSelector in the policy's own Namespace."
                            properties:
                              extendMatchLabels:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: 'ExtendMatchLabels allows match labels
                                  with the same key but different value. e.g. {key:
                                  [v1, v2]} matches labels: {key: v1, key: v2} and
                                  {key: v1, key: v2, key: v3}'
                                type: object
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          ipBlock:
                            description: IPBlock defines policy on a particular IPBlock.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          namespaceSelector:
                            description: "NamespaceSelector selects namespaces. This
                              field follows standard label selector semantics; if
                              present but empty, it selects all namespaces. \n If
                              EndpointSelector is also set, then the Rule would select
                              the endpoints matching EndpointSelector in the Namespaces
                              selected by NamespaceSelector. Otherwise, it selects
                              all Endpoints in the Namespaces selected by NamespaceSelector."
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      type: array
                    name:
                      description: Name must be unique within the policy and conforms
                        RFC 1123.
                      type: string
                    ports:
                      description: List of ports which should be made accessible on
                        the endpoints selected for this rule. Each item in this list
                        is combined using a logical OR. If this field is empty or
                        missing, this rule matches all ports (traffic not restricted
                        by port). If this field is present and contains at least one
                        item, then this rule allows traffic only if the traffic matches
                        at least one port in the list.
                      items:
                        description: SecurityPolicyPort describes the port and protocol
                          to match in a rule.
                        properties:
                          portRange:
                            description: PortRange is a range of port. If you want
                              match all ports, you should set empty. If you want match
                              single port, you should write like 22. If you want match
                              a range of port, you should write like 20-80, ports
                              between 20 and 80 (include 20 and 80) will matches.
                              If you want match multiple ports, you should write like
                              20,22-24,90.
                            type: string
                          protocol:
                            description: The protocol (TCP, UDP or ICMP) which traffic
                              must match.
                            enum:
                            - TCP
                            - UDP
                            - ICMP
                            type: string
                          type:
                            default: number
                            description: Type defines the PortRange is real port numbers
                              or port names which needed resolve. If it is empty,
                              the effect is equal to "number" for compatibility.
                            enum:
                            - number
                            - name
                            type: string
                        required:
                        - protocol
                        type: object
                      type: array
                    to:
                      description: List of destinations for outgoing traffic of endpoints
                        selected for this rule. Items in this list are combined using
                        a logical OR operation. If this field is empty or missing,
                        this rule matches all destinations (traffic not restricted
                        by destination). If this field is present and contains at
                        least one item, this rule allows traffic only if the traffic
                        matches at least one item in the to list. This field only
                        works when rule is egress.
                      items:
                        description: SecurityPolicyPeer describes a peer to allow
                          traffic to/from. Only certain combinations of fields are
                          allowed
                        properties:
                          endpoint:
                            description: Endpoint defines policy on a specific Endpoint.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              name:
                                description: Name is unique within a namespace to
                                  reference a resource.
                                type: string
                              namespace:
                                description: Namespace defines the space within which
                                  the resource name must be unique.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          endpointSelector:
                            description: "EndpointSelector selects endpoints. This
                              field follows extend label selector semantics; if present
                              but empty, it selects all endpoints. \n If NamespaceSelector
                              is also set, then the Rule would select the endpoints
                              matching EndpointSelector in the Namespaces selected
                              by NamespaceSelector. Otherwise, it selects the Endpoints
                              matching EndpointSelector in the policy's own Namespace."
                            properties:
                              extendMatchLabels:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: 'ExtendMatchLabels allows match labels
                                  with the same key but different value. e.g. {key:
                                  [v1, v2]} matches labels: {key: v1, key: v2} and
                                  {key: v1, key: v2, key: v3}'
                                type: object
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          ipBlock:
                            description: IPBlock defines policy on a particular IPBlock.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          namespaceSelector:
                            description: "NamespaceSelector selects namespaces. This
                              field follows standard label selector semantics; if
                              present but empty, it selects all namespaces. \n If
                              EndpointSelector is also set, then the Rule would select
                              the endpoints matching EndpointSelector in the Namespaces
                              selected by NamespaceSelector. Otherwise, it selects
                              all Endpoints in the Namespaces selected by NamespaceSelector."
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              ingressRules:
                description: List of ingress rules to be applied to the selected endpoints.
                  If this field is empty then this SecurityPolicy does not allow any
                  traffic.
                items:
                  description: Rule describes a particular set of traffic that is
                    allowed from/to the endpoints matched by a SecurityPolicySpec's
                    AppliedTo.
                  properties:
                    from:
                      description: List of sources which should be able to access
                        the endpoints selected for this rule. Items in this list are
                        combined using a logical OR operation. If this field is empty
                        or missing, this rule matches all sources (traffic not restricted
                        by source). If this field is present and contains at least
                        one item, this rule allows traffic only if the traffic matches
                        at least one item in the from list. This field only works
                        when rule is ingress.
                      items:
                        description: SecurityPolicyPeer describes a peer to allow
                          traffic to/from. Only certain combinations of fields are
                          allowed
                        properties:
                          endpoint:
                            description: Endpoint defines policy on a specific Endpoint.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              name:
                                description: Name is unique within a namespace to
                                  reference a resource.
                                type: string
                              namespace:
                                description: Namespace defines the space within which
                                  the resource name must be unique.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          endpointSelector:
                            description: "EndpointSelector selects endpoints. This
                              field follows extend label selector semantics; if present
                              but empty, it selects all endpoints. \n If NamespaceSelector
                              is also set, then the Rule would select the endpoints
                              matching EndpointSelector in the Namespaces selected
                              by NamespaceSelector. Otherwise, it selects the Endpoints
                              matching EndpointSelector in the policy's own Namespace."
                            properties:
                              extendMatchLabels:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: 'ExtendMatchLabels allows match labels
                                  with the same key but different value. e.g. {key:
                                  [v1, v2]} matches labels: {key: v1, key: v2} and
                                  {key: v1, key: v2, key: v3}'
                                type: object
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          ipBlock:
                            description: IPBlock defines policy on a particular IPBlock.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          namespaceSelector:
                            description: "NamespaceSelector selects namespaces. This
                              field follows standard label selector semantics; if
                              present but empty, it selects all namespaces. \n If
                              EndpointSelector is also set, then the Rule would select
                              the endpoints matching EndpointSelector in the Namespaces
                              selected by NamespaceSelector. Otherwise, it selects
                              all Endpoints in the Namespaces selected by NamespaceSelector."
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      type: array
                    name:
                      description: Name must be unique within the policy and conforms
                        RFC 1123.
                      type: string
                    ports:
                      description: List of ports which should be made accessible on
                        the endpoints selected for this rule. Each item in this list
                        is combined using a logical OR. If this field is empty or
                        missing, this rule matches all ports (traffic not restricted
                        by port). If this field is present and contains at least one
                        item, then this rule allows traffic only if the traffic matches
                        at least one port in the list.
                      items:
                        description: SecurityPolicyPort describes the port and protocol
                          to match in a rule.
                        properties:
                          portRange:
                            description: PortRange is a range of port. If you want
                              match all ports, you should set empty. If you want match
                              single port, you should write like 22. If you want match
                              a range of port, you should write like 20-80, ports
                              between 20 and 80 (include 20 and 80) will matches.
                              If you want match multiple ports, you should write like
                              20,22-24,90.
                            type: string
                          protocol:
                            description: The protocol (TCP, UDP or ICMP) which traffic
                              must match.
                            enum:
                            - TCP
                            - UDP
                            - ICMP
                            type: string
                          type:
                            default: number
                            description: Type defines the PortRange is real port numbers
                              or port names which needed resolve. If it is empty,
                              the effect is equal to "number" for compatibility.
                            enum:
                            - number
                            - name
                            type: string
                        required:
                        - protocol
                        type: object
                      type: array
                    to:
                      description: List of destinations for outgoing traffic of endpoints
                        selected for this rule. Items in this list are combined using
                        a logical OR operation. If this field is empty or missing,
                        this rule matches all destinations (traffic not restricted
                        by destination). If this field is present and contains at
                        least one item, this rule allows traffic only if the traffic
                        matches at least one item in the to list. This field only
                        works when rule is egress.
                      items:
                        description: SecurityPolicyPeer describes a peer to allow
                          traffic to/from. Only certain combinations of fields are
                          allowed
                        properties:
                          endpoint:
                            description: Endpoint defines policy on a specific Endpoint.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              name:
                                description: Name is unique within a namespace to
                                  reference a resource.
                                type: string
                              namespace:
                                description: Namespace defines the space within which
                                  the resource name must be unique.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          endpointSelector:
                            description: "EndpointSelector selects endpoints. This
                              field follows extend label selector semantics; if present
                              but empty, it selects all endpoints. \n If NamespaceSelector
                              is also set, then the Rule would select the endpoints
                              matching EndpointSelector in the Namespaces selected
                              by NamespaceSelector. Otherwise, it selects the Endpoints
                              matching EndpointSelector in the policy's own Namespace."
                            properties:
                              extendMatchLabels:
                                additionalProperties:
                                  items:
                                    type: string
                                  type: array
                                description: 'ExtendMatchLabels allows match labels
                                  with the same key but different value. e.g. {key:
                                  [v1, v2]} matches labels: {key: v1, key: v2} and
                                  {key: v1, key: v2, key: v3}'
                                type: object
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          ipBlock:
                            description: IPBlock defines policy on a particular IPBlock.
                              If this field is set then neither of the other fields
                              can be.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP
                                  Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should
                                  not be included within an IP Block Valid examples
                                  are "192.168.1.1/24" or "2001:db9::/64" Except values
                                  will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          namespaceSelector:
                            description: "NamespaceSelector selects namespaces. This
                              field follows standard label selector semantics; if
                              present but empty, it selects all namespaces. \n If
                              EndpointSelector is also set, then the Rule would select
                              the endpoints matching EndpointSelector in the Namespaces
                              selected by NamespaceSelector. Otherwise, it selects
                              all Endpoints in the Namespaces selected by NamespaceSelector."
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              policyTypes:
                description: List of rule types that the Security relates to. Valid
                  options are "Ingress", "Egress", or "Ingress,Egress". If this field
                  is not specified, it will default based on the existence of Ingress
                  or Egress rules; policies that contain an Egress section are assumed
                  to affect Egress, and all policies (whether or not they contain
                  an Ingress section) are assumed to affect Ingress. If you want to
                  write an egress-only policy, you must explicitly specify policyTypes
                  [ "Egress" ]. Likewise, if you want to write a policy that specifies
                  that no egress is allowed, you must specify a policyTypes value
                  that include "Egress" (since such a policy would not include an
                  Egress section and would otherwise default to just [ "Ingress" ]).
                items:
                  description: Policy Type string describes the NetworkPolicy type
                    This type is beta-level in 1.8
                  type: string
                type: array
              securityPolicyEnforcementMode:
                default: work
                description: 'Work mode specify the policy enforcement state: monitor
                  or work'
                type: string
              symmetricMode:
                description: SymmetricMode will generate symmetry rules for the policy.
                  Defaults to false.
                type: boolean
              tier:
                description: Tier specifies the tier to which this SecurityPolicy
                  belongs to. In v1alpha1, Tier only support tier0, tier1, tier2.
                type: string
            required:
            - tier
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: everoute/templates/agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everoute-agent
  namespace: kube-system
---
# Source: everoute/templates/controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everoute-controller
  namespace: kube-system
---
# Source: everoute/templates/agent/agent.yaml
apiVersion: v1
data:
  agentconfig.yaml: |
    datapathConfig:
      cnibr0: cnibr0
    localGwIP: 100.64.254.254
  cni-conf.conflist: |
    {
        "cniVersion": "0.3.0",
        "name": "everoute",
        "plugins": [
            {
                "type": "everoute"
            },
            {
                "type": "portmap",
                "capabilities": {"portMappings": true}
            }
        ]
    }
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app: everoute
  name: everoute-config-xu73od84d3
  namespace: kube-system
---
# Source: everoute/templates/agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: everoute-agent
rules:
- apiGroups:
  - agent.everoute.io
  resources:
  - agentinfos
  verbs:
  - patch
  - create
  - update
  - delete
  - get
  - list
  - watch
- apiGroups:
    - ""
  resources:
    - pods
    - nodes
  verbs:
    - patch
    - create
    - update
    - delete
    - get
    - list
    - watch
- apiGroups:
    - group.everoute.io
  resources:
    - groupmembers
    - groupmemberspatches
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - security.everoute.io
  resources:
    - securitypolicies
    - globalpolicies
  verbs:
    - get
    - list
    - watch
    - create
---
# Source: everoute/templates/controller/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: everoute-controller
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - secrets
  - pods
  - nodes
  verbs:
  - patch
  - create
  - update
  - delete
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - update
  - get
  - watch
  - list
- apiGroups:
    - networking.k8s.io
  resources:
    - networkpolicies
  verbs:
    - watch
    - list
    - get
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - agent.everoute.io
  resources:
  - agentinfos
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - group.everoute.io
  resources:
  - groupmembers
  - groupmemberspatches
  - endpointgroups
  verbs:
  - patch
  - create
  - update
  - delete
  - deletecollection
  - get
  - list
  - watch
- apiGroups:
  - security.everoute.io
  resources:
  - securitypolicies
  - endpoints
  - endpoints/status
  - globalpolicies
  verbs:
  - patch
  - create
  - update
  - delete
  - deletecollection
  - get
  - list
  - watch
  - create
---
# Source: everoute/templates/agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everoute-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everoute-agent
subjects:
  - kind: ServiceAccount
    name: everoute-agent
    namespace: kube-system
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    # support use certs authentication
    name: everoute-agent
---
# Source: everoute/templates/controller/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everoute-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everoute-controller
subjects:
  - kind: ServiceAccount
    name: everoute-controller
    namespace: kube-system
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    # support use certs authentication
    name: everoute-controller
---
# Source: everoute/templates/controller/webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: everoute-validator-webhook
  namespace: kube-system
spec:
  type: ClusterIP
  ports:
    - port: 9443
      protocol: TCP
      # This port should match port everoute-controller exposed.
      targetPort: 9443
  selector:
    app: everoute
    component: everoute-controller
---
# Source: everoute/templates/agent/agent.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: everoute-agent
  namespace: kube-system
  labels:
    app: everoute
    component: everoute-agent
spec:
  selector:
    matchLabels:
      app: everoute
      component: everoute-agent
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1024
  template:
    metadata:
      labels:
        app: everoute
        component: everoute-agent
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: everoute-agent
      containers:
        - name: init-agent
          command: ["init_agent"]
          image: everoute/release:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - NET_RAW
              - NET_ADMIN
            privileged: true
          volumeMounts:
            - name: everoute-run
              mountPath: /var/run/everoute/
            - name: everoute-agent
              mountPath: /var/lib/everoute/
            - name: cni-bin
              mountPath: /opt/cni/bin/
            - name: cni-conf
              mountPath: /etc/cni/net.d
            - name: everoute-config
              mountPath: /var/lib/everoute/cni-conf.conflist
              subPath: cni-conf.conflist
            - name: openvswitch
              mountPath: /var/run/openvswitch/
            - name: everoute-config
              mountPath: /var/lib/everoute/agentconfig.yaml
              subPath: agentconfig.yaml
            - mountPath: /lib/modules
              name: host-lib-modules
              readOnly: true
            - name: tmp
              mountPath: /tmp
          readinessProbe:
            exec:
              command: ["/usr/share/openvswitch/scripts/ovs-ctl", "status"]
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
        - name: everoute-agent
          image: everoute/release:latest
          imagePullPolicy: IfNotPresent
          command: ["start-everoute-agent"]
          args:
            - --enable-cni=true
            - -v=0
            - --metrics-addr=127.0.0.1:30002
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          readinessProbe:
            httpGet:
              host: 127.0.0.1
              port: 30002
              path: /metrics
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: everoute-run
              mountPath: /var/run/everoute/
            - name: everoute-agent
              mountPath: /var/lib/everoute/
            - name: everoute-config
              mountPath: /var/lib/everoute/agentconfig.yaml
              subPath: agentconfig.yaml
            - name: openvswitch
              mountPath: /var/run/openvswitch/
            - name: host-proc
              mountPath: /host/proc/
            - name: host-netns
              mountPath: /host/var/run/netns/
              mountPropagation: HostToContainer
            - name: cni-bin
              mountPath: /opt/cni/bin/
            - name: everoute-ipam
              mountPath: /var/lib/cni/networks/everoute
            - name: tmp
              mountPath: /tmp
            - name: xtables-lock
              mountPath: /run/xtables.lock
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - configMap:
            name: everoute-config-xu73od84d3
          name: everoute-config
        - name: openvswitch
          emptyDir: {}
        - name: everoute-run
          hostPath:
            path: /var/run/everoute
        - name: tmp
          emptyDir: {}
        - hostPath:
            path: /var/lib/everoute/
          name: everoute-agent
        - hostPath:
            path: /var/lib/cni/networks/everoute
          name: everoute-ipam
        - hostPath:
            path: /opt/cni/bin/
          name: cni-bin
        - hostPath:
            path: /etc/cni/net.d
          name: cni-conf
        - hostPath:
            path: /proc
          name: host-proc
        - hostPath:
            path: /var/run/netns
          name: host-netns
        - hostPath:
            path: /lib/modules
          name: host-lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
---
# Source: everoute/templates/controller/controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: everoute-controller
  namespace: kube-system
  labels:
    app: everoute
    component: everoute-controller
spec:
  strategy:
    # Ensure the existing Pod is killed before the new one is created.
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: everoute
      component: everoute-controller
  template:
    metadata:
      labels:
        app: everoute
        component: everoute-controller
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
      serviceAccountName: everoute-controller
      containers:
        - name: everoute-controller
          image: everoute/release:latest
          imagePullPolicy: IfNotPresent
          command: ["everoute-controller"]
          args:
            - --enable-leader-election=true
            - --port=9443
            - --enable-cni=true
            - -v=0
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 9443
              path: /healthz
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
---
# Source: everoute/templates/controller/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validator.everoute.io
webhooks:
  - admissionReviewVersions: ["v1"]
    sideEffects: None
    clientConfig:
      # CaBundle must set as the ca for secret everoute-controller-tls.
      caBundle:
      service:
        name: everoute-validator-webhook
        namespace: kube-system
        path: /validate/crds
        port: 9443
    failurePolicy: Fail
    name: validator.everoute.io
    rules:
      - apiGroups:
          - security.everoute.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - securitypolicies
          - endpoints
          - globalpolicies
      - apiGroups:
          - group.everoute.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - endpointgroups
